/************************************************************/
/*                程序作者：爱的伊苏                        */
/*                程序完成时间：2019/1/6                    */
/*                有任何问题请联系：740531307@qq.com        */
/************************************************************/
//@永远得意的笑下去

  二叉排序树：左侧所有节点均小于根节点
             右侧所有节点均大于根节点
             节点的左右子树依旧是二叉排序树
             时间复杂度 nlogn ~ n  (折半查找 ~ 顺序查找)

  AVL树(平衡二叉树)：
             在二叉排序树基础上，每个节点左右子树的高度之差的绝对值不超过一
             平衡方法：  单旋 && 双旋
             时间复杂度 nlogn 二叉排序树的最优

 B树:
             N阶AVL树，所以高度平衡
             m阶h高 最大节点数 (m^h - 1)/(m - 1)    等比数列求和公式
             (最大关键字节数为 m^h - 1)

             头节点最少2子节点&&其余最少[m/2]-1个子节点&&所有叶节点同层
             高度为5的6阶B树 至少包含
             第一层1
             第二层4
             第三层12
             第四层36
             第五层108


HASH:
             书上例题均为闭散列表，线性探查法 || 双散列法
             散列函数的平均查找长度  依据三星探查法进行运算
各类排序时间复杂度
直接插入排序 n  ~ n^2
希尔排序    nlog2n ~ nlog2n
冒泡        n  ~ n^2
快排        nlog2n ~ n^2
堆排序      nlog2n ~ nlog2n
二路并归    nlog2n ~ nlog2n
